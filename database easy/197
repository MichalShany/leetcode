197. Rising Temperature
 
SQL Schema
Table: Weather

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| id            | int     |
| recordDate    | date    |
| temperature   | int     |
+---------------+---------+
id is the primary key for this table.
This table contains information about the temperature in a certain day.
 

Write an SQL query to find all dates' id with higher temperature compared to its previous dates (yesterday).

Return the result table in any order.

The query result format is in the following example:

Weather
+----+------------+-------------+
| id | recordDate | Temperature |
+----+------------+-------------+
| 1  | 2015-01-01 | 10          |
| 2  | 2015-01-02 | 25          |
| 3  | 2015-01-03 | 20          |
| 4  | 2015-01-04 | 30          |
+----+------------+-------------+

Result table:
+----+
| id |
+----+
| 2  |
| 4  |
+----+
In 2015-01-02, temperature was higher than the previous day (10 -> 25).
In 2015-01-04, temperature was higher than the previous day (20 -> 30).


SELECT id
FROM
(SELECT *, 
    LAG(temperature,1) OVER (ORDER BY recordDate)  as prevTemp,
    LAG(recordDate,1) OVER (ORDER BY recordDate)  as prevDate
    FROM Weather) a
WHERE temperature > prevTemp
AND DATEDIFF(day,recordDate,prevDate) = -1 




sol2:
SELECT
    weather.id  
FROM
    weather
        JOIN
    weather w ON DATEDIFF(weather.recordDate, w.recordDate) = 1
        AND weather.Temperature > w.Temperature
;


SELECT a.Id FROM Weather AS a, Weather AS b
WHERE DATEDIFF(a.recordDate, b.recordDate)=1 AND a.Temperature > b.Temperature
